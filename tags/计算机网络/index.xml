<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机网络 on 清兵卫的博客</title>
    <link>https://qingbingwei.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 计算机网络 on 清兵卫的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Sep 2024 10:26:27 +0800</lastBuildDate><atom:link href="https://qingbingwei.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UDP客户服务器模型和UDP协议</title>
      <link>https://qingbingwei.github.io/post/udp%E5%AE%A2%E6%88%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E5%9E%8B%E5%92%8Cudp%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Mon, 16 Sep 2024 10:26:27 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/udp%E5%AE%A2%E6%88%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E5%9E%8B%E5%92%8Cudp%E5%8D%8F%E8%AE%AE/</guid>
      <description>socket 编程接口 对某种操作系统数据结构的抽象 （网络通信，发送信道 接收信道） 使用哪些系统调用接口来向这2个信道进行数据的 发送 接收
C/S模式 client（多 从） Server（单 主） 从设备 主动 向 主设备进行请求， 主设备接收到这个请求后，进行解析并响应
服务器先执行，在服务器机器上等待客户端的请求
一、UDP服务器编程模型 1. socket() 获取 操作系统抽象数据结构的对象 2. 主动的先执行，等待客户端的请求，客户端的请求包到达服务器，如何这个数据包正确的找到服务器的进程 pid 进程号 &amp;mdash;- 端口号 就是在服务器上，开后门 bind() 系统调用 把端口开放 3. 等待新的客户端发来请求 recvfrom
二、UDP客户端编程模型 1. socket() 获取 操作系统抽象数据结构的对象 2. bind() 不建议做 但是该填写自己的端口，发送UDP数据包，src ip:port dest ip:port bind(88991) 客户端代码会在不同的机器上运行，无法保证每个客户端都没有使用88991端口号 不调用bind，src ip:port 没有信息 为了能够将这个数据发送到网卡上，内核就会自动的选择一个当前系统没有被使用的端口号作为src 3. sendto() 向某一个IP和port上发送数据包
三、UDP协议抓包分析 UDP 从协议角度上， 只有目的端口、源端口的数据，不提供任何跟有序 无丢失的 传输提供帮助 UDP 面向数据报协议 TCP 面向连接的协议
UDP丢包 1.服务器根本就不存在（对应的端口号没有），UDP包到了网络层，网络传送给传输层，传输层没有缓存区来存这个数据，自然这个数据就丢失了 2.</description>
    </item>
    
    <item>
      <title>虚拟机网络环境及socket概述</title>
      <link>https://qingbingwei.github.io/post/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E5%8F%8Asocket%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Fri, 13 Sep 2024 23:19:29 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E5%8F%8Asocket%E6%A6%82%E8%BF%B0/</guid>
      <description>一、Vmware虚拟机网络环境概述 虚拟机&amp;mdash;&amp;mdash;软件技术(宿主机里安装一个服务，利用这个服务来共享宿主机的资源，通过服务，虚拟化成多个独立的主机进行管理) 1．宿主机里找到这个服务 2．几种组网方式的区别 a.NAT方式 宿主机里含有一个NAT服务(网络地址转换器，模拟成路由器) a.1.宿主机里被安装了一个能够连接到NAT路由器的虚拟网卡(vmnet8)，宿主机就是通过这个网卡和虚拟机通信 a.2.虚拟机如果要访问外网，需要配置网关，网关的地址，必须是NAT路由器的LAN口IP(不能是windows的vmnet8) a.3.vmnet8这个网卡，是给宿主机专门用来访问虚拟机用的，一定不要配置网关和DNS，这个网卡不是为宿主机提供网络服务假的路由器(软件)，外网能不能上，就看宿主机能不能上网了 b.host-only 宿主机里安装了一个虚拟的交换机，为宿主机提供了vmnet1的网卡，来连接到交换机上。 一旦虚拟机网卡连接到host-only，就意味连接到了交换机，只能和vmnet1进行数据交互。因为没有路由能力，虚拟机就无法访问外网 c.桥接 虚拟机利用宿主机里实际的网卡，充当虚拟机的物理层，虚拟机利用自己的独立NAc地址，使用宿主机的物理层进行数据通信寝室里其他设备也可以直接访问到虚拟机 3.Vmware和windows的数据互通 a.vmtools就是vmware这个软件提供的一个插件，只适合同一台机器上宿主机和虚拟机的访问实验室的多台主机和服务器相连，这个插件无能为力 b.建议使用网络服务进行数据交换 c.C/S模型 client和server a.1.ssh的远程登陆协议 a.2.虚拟机里安装ssh的服务器进程 如何判断虚拟机里有没有这个服务 netstat -tuan 查看当前机器服务链接状态 只需要在本地地址中端口号为22的，只要有这一行就表示服务已安装 a.3.宿主机安装ssh的客户端进程 Mobaxterm/Xterminal
二、socket简介 应用层 用户态 利用文件描述符和系统调用，实现数据的交换 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-syscall 系统调用 名词(文件描述符) 传输层 网络层 内核态 很多条链接，每条链接如何抽象给用户态 物理接口层
文件描述符:就是一个非负整数 Linux的操作系统内，有一张表 0 内核的驱动1 1 内核的驱动2 2 内核的驱动3 3 NULL 4 NULL 必须获得这个内核抽象链接的对应的文件描述符 socket认为是一张信封，但是socket是一个大而全的一个通用接口 三、socket下的常用编程接口 socket 拿信封 bind 绑定local address</description>
    </item>
    
    <item>
      <title>网络层概述</title>
      <link>https://qingbingwei.github.io/post/%E7%BD%91%E7%BB%9C%E5%B1%82%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 10 Sep 2024 20:07:23 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/%E7%BD%91%E7%BB%9C%E5%B1%82%E6%A6%82%E8%BF%B0/</guid>
      <description>⽹际层的设计选择 ⽹络层的主要任务 1.就是将分组从源主机经过多个⽹络和多段链路传输到⽬的主机 2.可以将该任务划分为分组转发和路由选择两种重要的功能。
⽹络层向上层提供两种服务 1.⾯向连接的虚电路服务 (1)核⼼思想是“可靠通信应由⽹络⾃身来保证”。 (2)通信双⽅沿着已建⽴的虚电路发送分组。 注:很多⼴域分组交换⽹都使⽤⾯向连接的虚电路服务。 例如，曾经的X.25和逐渐过时的帧中继（Frame Relay，FR）、异步传输模式（Asynchronnous Transfer Mode，ATM）。 2.⽆连接的数据报服务 (1)核⼼思想是“可靠通信应由⽤户主机来保证”。 (2)不需要建⽴⽹络层连接。 (3)每个分组可⾛不同的路径，因此，每个分组的⾸部都必须携带⽬的主机的完整地址。 (4)通信结束后，没有需要释放的连接。 注:这种通信⽅式所传送的分组可能误码、丢失、重复和失序。 由于⽹络⾃身不提供端到端的可靠传输服务，这就使得⽹络中的路由器可以做得⽐较简单，⼤⼤降低了⽹络造价。 ⽹络层协议 IPv4数据报格式 1.在TCP/IP标准中，各种数据格式常常以32⽐特（即4字节）为单位来描述。 2.⽹络层数据包（IP数据包，Packet）由⾸部、数据2部分组成 (1)数据：很多时候是由传输层传递下来的数据段（Segment）
IPv4数据报⾸部协议 1.版本(Version) ⻓度为4个⽐特，⽤来表示IP协议的版本。 (1)0b0100 : IPv4 (2)0b0110 : IPv6 2.⾸部⻓度(Header Length) 占4个⽐特，乘以4才是最终⻓度，⽤来表示IPv4数据报的⾸部⻓度。 (1)最⼩取值为⼆进制的0101，20字节 (2)最⼤取值为⼆进制的1111，60字节。 3.可选字段 (1)⻓度从1字节到40字节不等，⽤来⽀持排错、测量以及安全措施等功能。 (2)虽然可选字段增加了IPv4数据报的功能，但这同时也使得IPv4数据报的⾸部⻓度成为可变的，这就增加了因特⽹中每⼀个路由器处理IPv4数据报的开销。 4.填充 (1)当⾸部⻓度（20字节固定部分+可变部分）的⻓度不是4字节整数倍时，填充相应数量的全0字节，以确保IPv4数据报的⾸部⻓度是4字节的整数倍。 (2)使⽤全0进⾏填充。 5.区分服务(Differentiated Services Field) (1)占8个⽐特 (2)可以⽤于提⾼⽹络的服务质量 6.总长度(Total Length) (1)占16个⽐特 (2)⾸部 + 数据的⻓度之和，最⼤65535 7.标识、标志、⽚偏移 注:由于帧的数据不能超过1500字节，所以过⼤的IP数据包，需要分成⽚（fragments）传输给数据链路层。且每⼀⽚都有⾃⼰的⽹络层⾸部（IP⾸部）。 (1)标识（Identification）： a.占16⽐特 b.数据包的ID，当数据包过⼤进⾏分⽚时，同⼀个数据包的所有⽚的标识都是⼀样的 c.有⼀个计数器专⻔管理数据包的ID，每发出⼀个数据包，ID就加1 (2)标志（Flags）： a.占3⽐特 b.最低位（More Fragment，MF） i.MF=1表示本分⽚后⾯还有分⽚ ii.MF=0表示本分⽚后⾯没有分⽚ c.中间位（Don’t Fragment，DF） i.</description>
    </item>
    
    <item>
      <title>NAT技术和链路层概述</title>
      <link>https://qingbingwei.github.io/post/nat%E6%8A%80%E6%9C%AF%E5%92%8C%E9%93%BE%E8%B7%AF%E5%B1%82%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Thu, 05 Sep 2024 22:24:06 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/nat%E6%8A%80%E6%9C%AF%E5%92%8C%E9%93%BE%E8%B7%AF%E5%B1%82%E6%A6%82%E8%BF%B0/</guid>
      <description>注:对于因特网骨干网设备(路由器),不允许转发私网IP
因特⽹的接⼊⽅式 1.电话线⼊户 (1)平时说的ADSL电话拨号上⽹，⾮对称数字⽤户线路，提供上、下⾏不对称的传输带宽。 (2)需要提供猫（Modem）,调制解调器，进⾏数字信号和模拟信号的转换。 2.光纤⼊户 (1)光猫（optical modem），光调制解调器，进⾏数字信号和光信号的转换
公⽹和私⽹ 1.公⽹（public） (1)Internet上路由器中只有到达公⽹的路由表，没有到达私⽹的路由表 (2)公⽹IP由因特⽹信息中⼼（Internet Network Information Center，Inter NIC）统⼀分配和管理 (3)ISP需要向Inter NIC申请公⽹IP 2.私⽹（private） (1)主要⽤于局域⽹ (2)A类：10.0.0.0/8，1个A类⽹络 (3)B类：172.16.0.0/16 ~ 172.31.0.0/16，16个B类⽹络 (4)C类：192.168.0.0/24 ~ 192.168.255.0/24，256个C类⽹络
NAT技术 1.私⽹IP访问Internet需要进⾏NAT转换为公⽹IP (1)NAT（Network Address Translation） (2)这⼀步可以由路由器来完成 2.NAT特点 (1)可以节约公⽹IP资源 (2)会隐藏内部真实IP 3.NAT分类 (1)静态转换，⼿动配置NAT映射表 (2)动态转换，定义外部地址池，动态随机转换，⼀对⼀转换 (3)PAT（Port Address Translation），多对⼀转换 a.采⽤端⼝多路复⽤技术
/************************************************************ */
数据链路层概述 链路（Link）是指从⼀个节点到相邻节点的⼀段物理线路（有线或⽆线），⽽中间没有任何其他的交换节点。 1.数据链路（Data Link）是基于链路的。当在⼀条链路上传送数据时，除需要链路本身，还需要⼀些必要的通信协议来控制这些数据的传输，把实现这些协议的硬件和软件加到链路上，就构成了数据链路。 2.不同类型的数据链路，所⽤的通信协议可能是不同的 (1)⼴播信道：CSMA/CD协议（⽐如同轴电缆、集线器等组成的⽹络）&amp;mdash;-&amp;gt;几乎淘汰 (2)点对点信道：PPP协议（⽐如2个路由器之间的信道） 3.计算机中的⽹络适配器（俗称⽹卡）和其相应的软件驱动程序就实现了这些协议。⼀般的⽹络适配器都包含了物理层和数据链路层这两层的功能。
数据链路层的三个问题 1.封装成帧 (1)帧（Frame）的数据部分，就是⽹络层传递下来的数据包（IP数据包，Packet） (2)最⼤传输单元MTU（Maximum Transfer Unit） a.每⼀种数据链路层协议都规定了所能传送的帧数据⻓度上限 b.以太⽹的MTU为1500字节(最小传输单元为46字节)&amp;mdash;&amp;mdash;&amp;gt;针对数据部分 c.以太⽹V2的MAC帧最小为64字节 (3)以太⽹V2的MAC帧 (4)PPP帧 (5)封装成帧是指数据链路层给上层交付下来的协议数据单元PDU添加⼀个⾸部和⼀个尾部，使之成为帧。 a.帧的⾸部和尾部中包含有⼀些重要的控制信息。 b.帧⾸部和尾部的作⽤之⼀就是帧定界。 c.并不是每⼀种数据链路层协议的帧都包含有帧定界标志 2.透明传输 (1)透明传输是指数据链路层对上层交付下来的协议数据单元PDU没有任何限制，就好像数据链路层不存在⼀样。 a.</description>
    </item>
    
    <item>
      <title>超网和路由</title>
      <link>https://qingbingwei.github.io/post/%E8%B6%85%E7%BD%91%E5%92%8C%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Wed, 04 Sep 2024 19:59:09 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/%E8%B6%85%E7%BD%91%E5%92%8C%E8%B7%AF%E7%94%B1/</guid>
      <description>判断是⼦⽹还是超⽹ 1.先判断该⽹段的类型，是A类、B类、C类⽹络 (1)默认A类⼦⽹掩码的位数是8，B类⼦⽹掩码的位数是16，C类⼦⽹掩码的位数是24 2.然后判断⼦⽹掩码的位数 (1)⽐默认⼦⽹掩码多，就是⼦⽹ (2)⽐默认⼦⽹掩码少，就是超⽹
路由 路由的作用 1.在不同⽹段之间转发数据，需要有路由器的⽀持 2.默认情况下，路由器只知道跟它直连的⽹段，⾮直连的⽹段需要通过静态路由、动态路由告诉它 (1)静态路由 a.管理员⼿动添加路由信息 b.适⽤于⼩规模⽹络 (2)动态路由 a.路由器通过路由选择协议（⽐如RIP、OSPF）⾃动获取路由信息 b.适⽤于⼤规模⽹络
数据包的传送过程 1.在数据包的传送过程中，数据包的源IP地址和⽬的IP地址保持不变； 2.在数据包的传送过程中，数据包的源MAC地址和⽬的MAC地址逐链路（或逐⽹络）改变。 </description>
    </item>
    
    <item>
      <title>IP地址分类管理</title>
      <link>https://qingbingwei.github.io/post/ip%E5%9C%B0%E5%9D%80%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 03 Sep 2024 11:04:25 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/ip%E5%9C%B0%E5%9D%80%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/</guid>
      <description>实际上 IP 不会以主机的个数来配置的，⽽是根据设备上的 ⽹卡(NIC) 进⾏配置， 每⼀块⽹卡都会设置⼀个或者多个 IP 地址，⽽且通常⼀台路由器会有⾄少两块⽹卡， 所以可以设置两个以上的 IP 地址，所以主机的数量远远达不到 43 亿。
IPv4地址的表示⽅法
IPv4地址由因特⽹名字和数字分配机构（Internet Corporation for Assigned Names andNumbers，ICANN）进⾏分配。 1.我国⽤户可向亚太⽹络信息中⼼（Asia Pacific Network Information Center，APNIC）申请IP地址，需要缴纳相应的费⽤，⼀般不接受个⼈申请。 2.2011年2⽉3⽇，因特⽹号码分配管理局（Internet Assigned Numbers Authority，IANA）（由ICANN⾏使职能）宣布，IPv4地址已经分配完毕。 3.我国在2014⾄2015年也逐步停⽌了向新⽤户和应⽤分配IPv4地址，同时全⾯开展商⽤部署IPv6 1.IPv4地址的分类编址⽅法 早期为了分类管理，采⽤了下表的固定⽅式进⾏分类管理 8位 24位 A类地址: 0 网络号 + 主机号 16位 16位 B类地址:10网络号 + 主机号 24位 8位 C类地址:110网络号 + 主机号
D类地址:1110 + 多播地址 E类地址:1111 + 保留地址 单播 A &amp;mdash;&amp;mdash; B 广播 网络号内进行全部通知 组播/多播 c1 c2 c3 c4 c1 c4 add 组播IP地址</description>
    </item>
    
    <item>
      <title>MAC地址和ARP</title>
      <link>https://qingbingwei.github.io/post/mac%E5%9C%B0%E5%9D%80%E5%92%8Carp/</link>
      <pubDate>Sun, 01 Sep 2024 11:21:32 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/mac%E5%9C%B0%E5%9D%80%E5%92%8Carp/</guid>
      <description>MAC地址（Media Access Control Address） 每⼀个⽹卡都有⼀个6字节（48bit）的MAC地址，MAC 地址的结构如下： 注:全球唯⼀，固化在⽹卡的ROM中，由IEEE802标准规定 前3字节：OUI组织唯⼀标识符，由IEEE的注册管理机构分配给⼚商 后3字节：⽹络接⼝标识符，由⼚商⾃⾏分配
MAC地址获取 当不知道对⽅主机的MAC地址时，可以通过发送ARP⼴播获取对⽅的MAC地址 1.获取成功后，会缓存IP地址、MAC地址的映射信息，俗称：ARP缓存 2.通过ARP⼴播获取的MAC地址，属于动态（dynamic）缓存，存储时间⽐较短（默认是2分钟），过期就⾃动删除 相关命令 arp -a [主机地址]： 查询ARP缓存 arp -d [主机地址]： 删除ARP缓存 arp -s 主机地址 MAC地址：增加⼀条缓存信息（这是静态缓存，存储时间较久） ARP是什么 ARP 协议的全称是 Address Resolution Protocol(地址解析协议)，它是⼀个通过⽤于实现从 IP 地址到 MAC 地址的映射，即询问⽬标 IP 对应的 MAC 地址 的⼀种协议。 注: ARP 协议在 IPv4 中极其重要。 ARP缓存 通过 ARP 缓存，降低了⽹络流量的使⽤，在⼀定程度上防⽌了 ARP 的⼤量⼴播。 ⼀般来说，发送过⼀次 ARP 请求后，再次发送相同请求的⼏率⽐较⼤，因此使⽤ ARP 缓存能够减少 ARP 包的发送， 除此之外，不仅仅 ARP 请求的发送⽅能够缓存 ARP 接收⽅的 MAC 地址，接收⽅也能够缓存 ARP 请求⽅的 IP 和 MAC 地址 RARP(基本淘汰) 与 ARP 相对的，RARP(Reverse Address Resolution Protocol) 是将 ARP 反过来， 从 MAC 地址定位 IP 地址的⼀种协议，将打印机服务器等⼩型嵌⼊式设备接⼊⽹络时会使⽤到。 注:⽬前被BOOTP、DHCP所取代。 </description>
    </item>
    
    <item>
      <title>计算机组网模型</title>
      <link>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E7%BD%91%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 24 Aug 2024 23:48:55 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E7%BD%91%E6%A8%A1%E5%9E%8B/</guid>
      <description>计算机之间的连接⽅式 1.两台计算机的互联 ⽹线直连 需要⽤交叉线（不是直通线） 2.多台计算机的互联（旧式） 同轴电缆 连接模型，左右扩散 连接特点： 1.半双⼯通信、容易冲突 2.不安全、⼀旦某段线路出现问题，整个通信⽹络都会瘫痪
注: 通信模型中: 1.单工:发送端、接收端设备只具备一种能力 2.全双工:发送端、接收端设备具备两种能力，信道有两根，同时可以满足收发 3.半双工:发送端、接收端设备具备两种能力，但是信道只有一根，同时只能满足一个通信过程(对讲机) 3.多台计算机的互联 --- 集线器（Hub） 集线器有多个接⼝，接⼝的类型是RJ-45。⼀个接⼝收到数据后会发给其它的全部接⼝。 集线器⼯作在物理层，类似于⼀个多接⼝的转发器，收到什么就转发什么，⼀个接⼝收到会转发给其它的全部接⼝。 连接特点： 1.半双⼯通信、容易发⽣冲突 2.不安全、跟同轴电缆⼀样，没有记录存储能⼒，但某两个节点出现问题，不影响其他节点 缺点： 1.如果有1000台设备⽤多集线器连接，那么1台主机发送的数据，虽然最后只有⼀个主机来处理这个数据包，但会被发送到999台主机，对整个⽹络链路的占⽤率会⾮常⾼。 4.多台计算机的互联 --- ⽹桥（Bridge） ⽹桥⼜叫做桥接器，⼯作在数据链路层，是⼀个⼆层设备。 ⽹桥能够互连两个采⽤不同传输介质与不同传输速率的⽹络，但是⽹桥需要互连的⽹络在数据链路层以上采⽤相同的协议。 ⽹桥可以分隔两个⽹络之间的通信量，对收到的帧根据其MAC帧的⽬的地址进⾏转发和过滤。 当⽹桥收到⼀个帧时，并不是向所有的接⼝转发此帧，⽽是根据此帧的⽬的MAC地址，查找⽹桥中的地址表，然后确定将该帧转发到哪⼀个接⼝，或者是把它丢弃(即过滤)。 特点： ⽹桥可以通过⾃学习得知每侧接⼝的MAC地址，从⽽起到隔绝冲突域的作⽤ 5.多台计算机的互联 --- 交换器（Switch） 相当于集线器+⽹桥，接⼝更多的⽹桥、全双⼯通信，⽐集线器安全。 6.多台计算机的互联 --- 路由器（Router） 之前的多台计算机互联，连接的设备必须在同⼀⽹段，处在同⼀⼴播域。 特点: 1.可以在不同⽹段之间转发数据 2.隔绝⼴播域 注: 主机发送数据之前，⾸先会判断⽬标主机的IP地址跟它是否在同⼀个⽹段： 1&amp;gt; 同⼀个⽹段：ARP⼴播，查找MAC，通过交换机、集线器传递数据 2&amp;gt; 不在同⼀个⽹段：通过路由器转发数据，主机向⽹关发送数据 </description>
    </item>
    
    <item>
      <title>计算机网络评价指标和封包解包</title>
      <link>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87%E5%92%8C%E5%B0%81%E5%8C%85%E8%A7%A3%E5%8C%85/</link>
      <pubDate>Wed, 21 Aug 2024 17:35:31 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87%E5%92%8C%E5%B0%81%E5%8C%85%E8%A7%A3%E5%8C%85/</guid>
      <description>计算机⽹络的性能指标 1.速率 数据量的常⽤单位有字节（byte，记为⼤写B） 速率是指数据的传送速率（即每秒传送多少个⽐特），也称为数据率（Data Rate）或⽐特率（BitRate） 速率的基本单位是⽐特/秒（bit/s，可简记为b/s，有时也记为bps，即bit per second 数据量单位中的K、M、G、T的数值分别为2^10 、2^20 、2^30 、2^40 。 速率单位中的k、M、G、T的数值分别为10^3 、10^6 、10^9 、10^12 。 2.带宽 带宽在模拟信号系统中的意义，某个信号所包含的各种不同频率成分所占据的频率范围。单位：Hz 带宽在计算机⽹络中的意义，⽤来表示⽹络的通信线路所能传送数据的能⼒，即在单位时间内从⽹络中的某⼀点到另⼀点所能通过的最⾼数据率。单位：b/s。 数据传送速率 = min [ 主机接⼝速率，线路带宽，交换机或路由器的接⼝速率 ] 3.吞吐量 吞吐量是指在单位时间内通过某个⽹络或接⼝的实际数据量。吞吐量常被⽤于对实际⽹络的测量，以便获知到底有多少数据量通过了⽹络。 吞吐量受⽹络带宽的限制。 4.时延 时延是指数据从⽹络的⼀端传送到另⼀端所耗费的时间，也称为延迟或迟延。 数据可由⼀个或多个分组、甚⾄是⼀个⽐特构成。 分为：发送时延、传播时延、排队时延、处理时延 5.时延带宽积 时延带宽积是传播时延和带宽的乘积。 链路的时延带宽积也称为以⽐特为单位的链路⻓度，这对我们以后理解以太⽹的最短帧⻓是⾮常有帮助的。 6.往返时间 往返时间（Round-Trip Time，RTT）是指从发送端发送数据分组开始，到发送端收到接收端发来的相应确认分组为⽌，总共耗费的时间。 7.利⽤率 链路利⽤率，链路利⽤率是指某条链路有百分之⼏的时间是被利⽤的（即有数据通过）。完全空闲的链路的利⽤率为零。 ⽹络利⽤率，⽹络利⽤率是指⽹络中所有链路的链路利⽤率的加权平均。
计算机⽹络数据封包和解包
⽹络体系的术语 1.实体 实体是指任何可发送或接收信息的硬件或软件进程。 对等实体是指通信双⽅相同层次中的实体。 2.协议 协议是控制两个对等实体在“⽔平⽅向” 进⾏“逻辑通信”的规则的集合。
协议的三要素 1.语法，定义所交换信息的格式 2.语义，定义通信双⽅所要完成的操作 3.同步，定义通信双⽅的时序关系 3.服务 协议是“⽔平”的，⽽服务是“垂直”的。 实体看得⻅下层提供的服务，但并不知道实现该服务的具体协议。下层的协议对上层的实体是“透明”的。 对等层次之间传送的数据包称为该层的协议数据单元（Protocol Data Unit，PDU）。 同⼀系统内层与层之间交换的数据包称为服务数据单元（Service Data Unit，SDU）。 </description>
    </item>
    
    <item>
      <title>计算机网络分层结构和分组交换</title>
      <link>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%88%86%E5%B1%82%E7%BB%93%E6%9E%84%E5%92%8C%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2/</link>
      <pubDate>Mon, 19 Aug 2024 21:07:18 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%88%86%E5%B1%82%E7%BB%93%E6%9E%84%E5%92%8C%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2/</guid>
      <description>网络的组成 网络是由节点、链路互连形成的
节点 链路 软硬件可裁剪的计算机系统（路由器、机顶盒......） 有线 无线 互联网 各种网络互相之间进行数据通信，各个异构网络通过路由器相连 因特网 通过IP地址识别身份信息 物理层考虑问题 1.采用什么传输介质 2.采用什么物理接口 3.采用什么信号表示比特0和比特1
链路层考虑问题 1.标识网络中各主机的身份(例如MAC地址) 2.从比特流中区分出地址和数据(数据封装格式) 3.协调各主机争用总线(媒体接入控制) 4.以太网交换机的实现(自学习和转发帧) 5.检测数据是否误码(差错检测) 6.出现传输差错如何处理(可靠传输和不可靠传输) 7.接收方控制发送方注入网络的数据量(流量控制)
网络层考虑问题 1.标识网络和网络中的各主机(网络和主机共同编制，例如IP地址) 2.路由器转发分组(路由选择协议、路由表和转发表)
传输层考虑问题 1.进程之间基于网络的通信(进程的标识，例如端口号) 2.出现传输差错如何处理(可靠传输和不可靠传输)
应用层考虑问题 1.不同的数据格式、数据解析、数据处理
端系统问题 分层逻辑
应用层 应用数据的解析 表示层 数据加密解密 会话层 进程管理
传输层
网络层/网际层
数据链路层 网卡 物理层
数据传输
1.电路交换 1.建⽴连接，分配通信资源 2.通话，⼀直占⽤通信资源 3.释放连接，归还通信资源 2.分组交换 优点 1.没有建⽴连接和释放连接的过程 2.分组传输过程中逐段占⽤通信链路，有较⾼的通信线路利⽤率 3.交换节点可以为每⼀个分组独⽴选择转发路由，使得⽹络有很好的⽣存性 缺点 1.分组⾸部带来了额外的传输开销 2.交换节点存储转发分组会造成⼀定的时延 3.⽆法确保通信时端到端通信资源全部可⽤，在通信量较⼤时可能造成⽹络阻塞 4.分组可能会出现失序和丢失等问题 </description>
    </item>
    
    <item>
      <title>计算机网络</title>
      <link>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sat, 17 Aug 2024 16:47:45 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
      <description>计算机网络学习内容: 计算机网络原理（保证数据通信是一个完整的 协议设计 网络组织） 计算机网络编程（保证数据高并发的进入服务器 操作系统底层驱动 网络协议）
计算机网络互连模型
计算机网络由若干节点和链接这些节点的链路组成，网络中的节点可以是计算机、交换器、集线器或者路由器等能够进行网络通信的终端设备，链路是一个节点到另外一个节点所走过的物理路线。 这些节点和链路彼此连接可以形成各种不同范围的网络，通过网络覆盖范围的大小，可以分为局域网、城域网和广域网。 1.局域网:一般指的是范围在几百到几公里办公楼或者校园内计算机相互连接成的计算机网络，一般用在狭小区域内的网络，一个社区、一栋楼、办公室经常使用局域网。 2.城域网:一个城市中的计算机所相互连接形成的计算机网络。城域网是介于广域网与局域网之间的一种高速网络。 城域网设计的目标是要满足几千米范围内的大量企业、机关、公司的多个局域网互联的需求，以实现大量用户之间的数据、语音、图形与视频等多种信息的传输功能。 3.广域网︰广域网中的计算机所形成的连接范围就更大了，常常是一个国家或是一个洲。其目的是为了让分布较远的各局域网互联。 边缘结构 研究接入方式 骨干网 核心结构 传输行为 分组传递...... 计算机网络设计：保证主机到主机之间，能够保证数据无差错，数据身份正确，数据无丢失交给数据处理层
OSI标准7层模型
应用层（不关心组网方式） 表示层 数据加密解密 会话层 进程管理
传输层 数据到应用层的分离 端到端的通信 [数据无丢失]&amp;mdash;可选
网络层 把数据链路上不同身份转换为同一个身份结构，为上层提供了统一的接口
数据链路层 数据无差错 身份识别（跟组网方式有关） 物理层 约定电气协议</description>
    </item>
    
  </channel>
</rss>
