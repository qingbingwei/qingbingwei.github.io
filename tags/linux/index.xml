<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 清兵卫的博客</title>
    <link>https://qingbingwei.github.io/tags/linux/</link>
    <description>Recent content in Linux on 清兵卫的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Mar 2024 07:34:29 +0800</lastBuildDate><atom:link href="https://qingbingwei.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux实例应用</title>
      <link>https://qingbingwei.github.io/post/linux%E5%AE%9E%E4%BE%8B%E5%BA%94%E7%94%A8/</link>
      <pubDate>Fri, 01 Mar 2024 07:34:29 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E5%AE%9E%E4%BE%8B%E5%BA%94%E7%94%A8/</guid>
      <description>1.每天凌晨2:30备份数据库day01到/data/backup/db; 2.备份开始和备份结束的时候，要给出相应的提示信息； 3.备份后的文件要以备份时间为文件名，并打包成tar.gz的格式，比如：2021-09-15_230201.tar.gz; 4.在备份的同时，要检查是否有10天前备份的数据库文件，如果有就将其删除。
注:cd /usr/sbin # 为什么要放在sbin目录，因为这个目录是root用户具备执行的权限
数据库用户名 DB_USER=root
数据库密码 DB_PW=Xml0607!
备份的数据库 DATABASE=day01
创建备份目录,如果目录不存在，则创建 只有[]里面的表达式为true 才会执行 &amp;amp;&amp;amp; 右边的内容 ${} 用来取文件名或文件路径 [ ! -d &amp;ldquo;${BACKUP}/${DATETIME}&amp;rdquo; ] &amp;amp;&amp;amp; mkdir -p &amp;ldquo;${BACKUP}/${DATETIME}&amp;rdquo;
备份数据库 mysqldump -u${DB_USER} -p${DB_PW} &amp;ndash;host=${HOST} -q -R &amp;ndash;databases ${DATABASE} | gzip &amp;gt; ${BACKUP}/${DATETIME}/$DATETIME.sql.gz
将文件打包成tar.gz格式 cd ${BACKUP} tar -zcvf $DATETIME.tar.gz ${DATETIME}
删除对应目录 rm -rf ${BACKUP}/${DATETIME}
删除十天之前备份文件 find ${BACKUP} -atime +10 -name &amp;ldquo;*.tar.gz&amp;rdquo; -exec rm -rf {} ; echo &amp;ldquo;数据库${DATABASE}备份成功&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Linux日志管理</title>
      <link>https://qingbingwei.github.io/post/linux%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/</link>
      <pubDate>Thu, 29 Feb 2024 20:14:56 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/</guid>
      <description>日志的基本介绍：
日志文件是重要的系统信息文件，其中记录了很多重要的系统事件， 包括用户的登录信息、系统的启动信息、系统的安全信息、邮件相关信息、各种服务相关信息等。 日志对于安全来说也很重要，它记录了系统每天发生的各种事情， 通过日志来检查错误发生的原因，或者受到攻击时攻击者留下的痕迹。 一句话理解日志：日志是用来记录重大事件的工具。
注:绝大多数的日志文件保存在/var/log目录中。
使用lastlog来查看/var/log/lastlog
使用root用户通过xshell7登录，第一次使用错误的密码，第二次使用正确的密码登录成功，查看日志文件/var/log/secure里面有没有记录相关信息。
cat secure 注:可以通过 echo &#39;&#39; &amp;gt; secure 清空secure文件中的内容 Linux日志管理服务
centos7日志服务是rsyslogd,centos6日志服务是syslogd。 rsyslogd日志服务功能更加强大。 注:rsyslogd的使用、日志文件的格式和syslogd是兼容的。 注:Linux日志服务帮助我们进行日志管理，是借助了/etc/rsyslog.conf配置文件来实现的。 ps aux | grep rsyslog 查看rsyslogd服务是否启动 systemctl list-unit-files | grep rsyslog 查询rsyslogd服务的启动状态 日志管理服务配置文件
管理日志的配置文件/etc/rsyslog.conf 日志文件的格式是 *.* 第一个*：代表日志类型 auth pam产生的日志 authpriv ssh ftp等登陆信息的验证信息 corn 时间任务相关的信息 kern 内核相关 lpr 打印相关的信息 mail 邮件相关的信息 mark(syslog)-rsyslog 服务内部信息 news 新闻组 user 用户程序产生的相关信息 local 1-7 自定义日志设备 第二个*：代表日志级别 debug 有调试信息的，记录的日志信息最多 info 一般日志信息，最常用 notice 提醒信息，需要检查一下程序了，不理会可能会出现错误。 warning 警告信息,当出现警告时，你的程序可能已经出现了问题,但不影响程序正常运行,尽快 进行处理，以免导致服务宕掉。 err 错误信息，出现这一项时，已经挑明服务出现了问题,服务都无法确认是否能正常运 行。 crit 严重级别，阻止整个系统或程序不能正常工作的信息 alert 需要立即修改的信息 emerg 记录内核崩溃等信息 none 什么都不记录 注：从上到下，日志级别从低到高，记录的信息也越来越少。 由日志服务rsyslogd记录的日志文件，日志文件的格式包含以下4列： 1.</description>
    </item>
    
    <item>
      <title>Linux_shell编程</title>
      <link>https://qingbingwei.github.io/post/linux_shell%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Thu, 29 Feb 2024 13:58:49 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux_shell%E7%BC%96%E7%A8%8B/</guid>
      <description>什么是shell:
Shell 是一个命令行解释器，它为用户提供了一个向 Linux 内核发送请求以便运行程序的界面系统级程序， 用户可以用 Shell 来启动、挂起、停止甚至是编写一些程序。 学习shell的原因:
1.Linux 运维工程师在进行服务器集群管理时，需要编写 Shell 程序来进行服务器管理。 2.对于 JavaEE 和 Python 程序员来说，工作的需要，会要求你编写一些 Shell 脚本进行程序或者是服务器的维护， 比如编写一个定时备份数据库的脚本。 3.对于大数据程序员来说，需要编写 Shell 程序来管理集群。 shell脚本的编写执行方式:
1.格式要求 脚本以#!/bin/bash 开头 脚本需要有可执行权限 2.脚本的常用执行方式 给要执行的脚本文件，添加可执行权限，使用./运行 直接用 sh 脚本文件名 命令执行，不用赋予脚本可执行权限 shell的变量
Linux 中 Shell 的变量分为系统变量和用户自定义变量。 系统变量:HOME,SHELL,PWD,USER 查询指定系统变量: echo $HOME 注:我们可以使用set命令显示当前 Shell 中所有变量。 用户自定义变量 1.普通变量 A=100 2.静态变量 readonly B=2 注:变量定义规则 1.变量名称可以由字母、数字和下划线组成，但是不能以数字开头。 2.等号两侧不能有空格。 3.变量名称一般习惯为大写，这是一个规范，大家遵守即可。 设置环境变量(修改/etc/profile) 1.export 变量名=变量值：将 Shell 变量输出为环境变量/全局变量。 2.source 配置文件：让修改后的配置文件立即生效 3.echo $变量名：查询环境变量的值 注:多行注释 :&amp;lt;&amp;lt;! 需要注释的第一行内容 需要注释的第二行内容 !</description>
    </item>
    
    <item>
      <title>Linux_rpm和yum</title>
      <link>https://qingbingwei.github.io/post/linux_rpm%E5%92%8Cyum/</link>
      <pubDate>Wed, 28 Feb 2024 22:32:01 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux_rpm%E5%92%8Cyum/</guid>
      <description>rpm
注:RPM是redhat package manage（软件包管理工具的缩写），类似于setup.exe 查询所有安装的rpm列表 rpm -qa rpm -qa | more 分页展示所有的rpm列表 查询当前系统中是否安装了指定的软件 rpm -qa | grep firefox 查询linux系统中是否已经安装了火狐浏览器 firefox-60.8.0-1.el7.centos.x86_64 一个rpm包的名称命名规则： firefox：rpm包名 60.8.0-1.el7：rpm包的版本号 centos：rpm包适用于的操作系统 x86_64：适用于64位的操作系统。(如果是i686或者i386说明适用于32位操作系统，noarch表示通用。) 查看软件包是否安装 rpm -q firefox 查看火狐浏览器是否存在rpm包(安装) 查询软件安装的详细信息 rpm -qi firefox 查询火狐浏览器的详细安装信息 查看rpm包安装之后的文件 rpm -ql firefox 查看firefox安装之后的文件 查看指定的文件所属的rpm包 rpm -qf /etc/firefox/pref 查询/etc/firefox目录下面的pref文件所属的rpm包 删除rpm包文件 rpm -e firefox 删除firefox 注:如果其它的软件包依赖于要删除的软件包，卸载时则会产生错误。 此时如果我们想强制删除，可以添加另外的参数--nodeps。 强制删除rpm包文件 rpm -e --nodeps firefox #删除firefox 安装rpm包 rpm -ivh RPM包全路径名称 i=install 安装 v=verbose 提示 h=hash 进度条 yum
注:Yum是一个Shell前端软件包管理器，基于RPM包管理，能够从指定的服务器自动下载RPM包并安装， 并且可以自动处理依赖性关系，并且一次安装所有的依赖软件包。 查询yum服务器上是否有需要安装的软件： yum list | grep xxx软件列表 下载并安转指定的yum包： yum install xxx 的rpm包名 </description>
    </item>
    
    <item>
      <title>Linux动态监控</title>
      <link>https://qingbingwei.github.io/post/linux%E5%8A%A8%E6%80%81%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Mon, 26 Feb 2024 22:18:56 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E5%8A%A8%E6%80%81%E7%9B%91%E6%8E%A7/</guid>
      <description>Linux动态监控
top 用来显示正在执行的进程的信息 -d秒数 指定top命令每隔几秒刷新，默认3秒 -i 使用top不显示任何闲置或者僵死的进程 -p 通过指定监控ID来仅仅监控某个进程的状态 top指标信息 top -时间: top命令刷新进程的时间 up:系统运行的时长 user:当前linux系统上面的用户数 load average: 负载值（三个数字相加(0.04+0.07+0.18)除以3 的值&amp;gt;0.7说明负载值很大） Tasks:总进程数 ruuning: 正在运行的进程数 sleeping:休眠的进程数 stopped:停止的进程数 zombie:僵死的进程数 %(CPU): CPU负载百分比 us:用户占用cpu百分比 sy:系统占用cpu百分比 id:空闲cpu百分比 Mem:描述内存占用情况 total:总共内存 free 空余内存 used：使用了的内存 buff/cache：缓存 Swap:描述交换区内存占用情况 top指令的交互操作 P 以CPU使用率来排序，默认就是此项 M 以内存使用来排序 N 以PID排序 q 退出top 监控特定用户 输入u 再输入用户名 终止指定进程 输入k 然后输入要结束的进程ID号 回车之后输入9 强制删除。 netstat 监控网络状态 -an 按照一定的属性排列输出 -p 显示哪个进程在调用 netstat指标信息 Local Address:本机linux的ip地址 Foreign Address:外部的网络地址 Proto:网络协议 127.0.0.1 / 0.0.0.0: 当前linux机器的本地地址 631/25/6060.</description>
    </item>
    
    <item>
      <title>Linux服务管理</title>
      <link>https://qingbingwei.github.io/post/linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 26 Feb 2024 20:58:48 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/</guid>
      <description>service(本质)就是进程，但是是运行在后台的，通常都会监听某个端口，等待其他程序的请求 比如说(mysql3306，sshd222)，因为又称为守护进程，在Linux中是重要的知识点。
Linux服务管理
service
注:在CentOs7.0后，很多服务不再使用Service，而是systemctl service 指令管理的服务在/etc/init.d查看 service network status 查看network服务的状态 service network stop 关闭network 此时Xshell连接linux会连接不上 service network start 重启network 此时Xshell会连接上linux setup 查看更多的系统服务 chkconfig chkconfig --list 查看服务 chkconfig --level 级别 network on/off 设置服务在指定级别启动/关闭 systemctl
注:systemctl 指令管理的服务在/usr/lib/systemd/system中查看。 systemctl [start | stop | restart | status] 服务名 服务启动/停止/重启/重载/查看状态： systemctl list-unit-files 查看所有服务的自启动状态 服务的状态如下： masked 此服务禁止自启动 static 该服务无法自启动，只能作为其他文件的依赖 enabled 已配置为自启动 disabled 未配置为自启动 systemctl is-enabled 服务名 查看某一服务是否自启动 systemctl enable 服务名 设置服务自启动 (服务运行级别 3、5) systemctl disable 服务名 设置服务禁用自启动 (服务运行级别 3、5) 防火墙指令</description>
    </item>
    
    <item>
      <title>Linux进程管理</title>
      <link>https://qingbingwei.github.io/post/linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 25 Feb 2024 23:59:27 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</guid>
      <description>每个进程都可能以两种形式存在，前台和后台
前台进程就是及用户在目录上可以进行操作的（占用屏幕 比如我们的top指令） 后台是无法在屏幕上操作的进程。 注:一般系统的服务进程都是以后台进程的方式存在，而且会常驻在系统中直到关机才结束。 查看系统运行进程
ps 用来查看系统中哪些进程正在运行，以及他们的运行的状况 PID 进程识别号 TTV 终端机号 TIME 此进程所消耗cpu时间 CMD 进程名或执行对应进程的命令 -a 显示进程终端的详细信息 -e 显示所有进程 -f 全格式显示 -u 以用户格式显示进程信息 -x 显示后台进程运行的参数 ps -aux | more 分页展示进程信息 USER: 进程所属的用户名称。 PID:进程号。 %CPU:进程占用CPU的百分比。 %MEM:进程占用物理内存的百分比。 VSZ:进程占用虚拟内存的大小(KB)。 RSS:进程占用物理内存的大小(KB)。 STAT:进程状态，S-代表睡眠 R-正在运行 D-短期等待 Z-僵死进程 T-被停止的线程。 START:进程启动的时间。 TIME:进程使用CPU的时间。 COMMAND:进程启动所需要的命令和参数。 ps -ef | grep 进程名称 查看指定进程信息 kill 终止进程 kill 进程号 kill -9 进程号 强制杀死某个进程 注:关闭远程登陆服务后，我们可以使用/bin/systemctl start sshd.service重启sshd服务 killall 杀死当前进程及其子进程 killall 进程名 查看进程树
pstree 查看进程树 -p 显示进程id -u 显示进程用户 </description>
    </item>
    
    <item>
      <title>Linux_NAT网络配置</title>
      <link>https://qingbingwei.github.io/post/linux_nat%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 25 Feb 2024 17:42:47 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux_nat%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</guid>
      <description>Linux网络配置的指令
ipaddr 在linux查看ip地址 ifconfig 在linux查看ip地址 ping 是否ping通指定的ip地址 ipconfig 在windows操作系统里面查看网络的ip地址 Linux网络环境配置（固定ip的方式）
1.编辑我们linux的网卡文件 这个网卡文件在/etc/sysconfig/network-scripts/ifcfg-ens33 2.编辑网卡文件ifcfg-enss33 3.重启网络服务(systemctl restart network)或者重启系统(reboot) Linux主机名和host映射
注:可以修改/etc/hostname指定主机名名称。注意，修改完成之后，需要重启linux系统才能生效。 将主机名称和ip地址进行映射 在windows里面通过本机的主机名来ping通Linux，我们需要修改windows的hosts文件。 找到C:\Windows\System32\drivers\etc下面的hosts文件，进行相关的编辑 192.168.146.135 xq100 ip地址是linux的ip地址 在linux里面通过本机的主机名来ping通主机,我们需要编辑/etc/hosts文件。 192.168.0.178 主机名称 ip是windows所连网络的ip地址 后面的是windows的主机名称 </description>
    </item>
    
    <item>
      <title>Linux磁盘分区</title>
      <link>https://qingbingwei.github.io/post/linux%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA/</link>
      <pubDate>Sun, 25 Feb 2024 13:43:58 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA/</guid>
      <description>Linux磁盘分区机制
1.Linux 系统中的文件系统的总体结构是一定的：只有一个根目录，根目录下的目录结构独立且唯一 （如 /boot、/dev、/bin、/etc 目录等都是唯一的），Linux 中的磁盘分区都是文件系统中的一部 分。 2.计算机的硬盘可以有多个、磁盘上的分区也可以有多个。 但每个磁盘要想连接到 Linux 系统中，需要将分区“映射”到文件系统的某一个目录下， 这样访问目录即可访问对应硬盘分区，这种映射称为“挂载”。 3.任何目录或其父目录都要挂载到硬盘的某个分区下。 如需要将某一分区挂载到根目录下，Linux 系统才能正常工作。 4.某个分区所挂载的目录，称为此分区的挂载点。 5.磁盘的不同分区可以挂载到 Linux 文件系统的不同分区下，但不能同时挂载到一个相同的目录。 注:我们可以使用lsblk命令来查看详细的磁盘分区信息
Linux硬盘类型
IDE硬盘 hdx~ hd:标识硬盘类型 IDE硬盘类型 x:不同的硬盘(a基本盘 b基本从属盘 c辅助盘 d辅助从属盘) ~:磁盘分区 1 2 3 4 5 SCSI硬盘 sdx~ sd:标识硬盘类型 SCSI硬盘类型 x:描述是第几块硬盘(a第一块硬盘 b第二块硬盘 c第三块硬盘 d第四块硬盘) ~:磁盘分区 1 2 3... 我们也可以查看分区的详细信息： [root@xq100 ~]# lsblk -f NAME FSTYPE LABEL UUID MOUNTPOINT sda ├─sda1 xfs 72921afb-f2fa-4b12-9338-28b31d19d15a /boot ├─sda2 swap 6b47cbdc-9db2-4e27-9309-3898c51b3d5f [SWAP] └─sda3 xfs 569b448b-1d35-47d6-929d-ad256d81d19d / sr0 iso9660 CentOS 7 x86_64 2019-09-11-18-50-31-00 注: NAME ：驱动器标识 FSTYPE ：文件系统类型 LABLE ：文件系统 LABLE UUID ：分区唯一标识符，格式化磁盘后，会给分区分配一个32位的唯一的字符串 MOUNTPOINT ：挂载点 给新增的硬盘分区</description>
    </item>
    
    <item>
      <title>Linux定时任务调度</title>
      <link>https://qingbingwei.github.io/post/linux%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Sun, 25 Feb 2024 11:23:30 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/</guid>
      <description>定时任务调度:指每隔指定的时间，执行特定的命令或程序(脚本)
任务调度命令:
crontab
-e 编辑定时任务 -l 查询定时任务 -r 删除定时任务 例.创建一个定时任务，将etc目录下面的文件列表查询出来，追加到/tmp/etc.txt文件中，并每分钟执行1次。 */1 * * * * ls -l /etc/ &amp;gt; /tmp/etc.txt 占位符含义 第一个 “*” 一个小时当中的第几分钟 0-59 第二个 “*” 一天当中的第几个小时 0-23 第三个 “*” 一个月当中的第几天 1-31 第四个 “*” 一年当中的第几个月 1-12 第五个 “*” 一周当中的星期几 0-7(0和7都代表星期日) 特殊符号 * 代表任何时间，比如第一个“*”就代表1小时中每分钟都执行1次的意思。 ， 代表不连续的时间，比如“0 8,12,16 * * *”就代表1天中的8点过0分，12点过0分，16点过0分都会执行1次。 - 代表连续的世间范围，比如“0 5 * * 1-6”就代表星期1到星期6的凌晨5点过0分都会执行。 */n 代表每隔多久执行1次。比如“*/10 * * * *” 就代表每隔10分钟就执行1次命令。 注:service crond restart [重启任务调度] at
机制介绍: 1. at命令是一次性定时执行任务计划，at的守护线程atd以后台的模式运行，检查作业队列来运行。 2.</description>
    </item>
    
    <item>
      <title>Linux组管理和权限管理</title>
      <link>https://qingbingwei.github.io/post/linux%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 24 Feb 2024 23:54:50 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E7%BB%84%E7%AE%A1%E7%90%86%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>Linux组的介绍
Linux里面的文件，属于对应的用户，也属于用户对应的组 修改文件所属的用户 chown 用户名 文件名 chown xq apple.txt 将当前文件的所属用户变成xq 修改文件所在的组 chgrp 组名 文件名 chgrp monster apple.txt 修改用户所属的组 usermod -g 组名 用户名 Linux的权限介绍
总共10位，我们使用0-9来描述。 第0位确定文件类型(d,-,l,c,b) 1.l是软连接，相当于windows的快捷方式 2.d是目录，相当于windows的文件夹 3.c是字符设备，鼠标，键盘(/dev 目录里面查看) 4.b是块设备，比如说硬盘(/dev 目录里面查看) 5.-是文件 第1-3位确定所有者（该文件的所有者）拥有该文件的权限 --User rwx作用到文件 r 代表可读 read 可以读取，查看 w 代表可写 write 可以修改，但是不代表可以删除改文件，删除一个文件的前提条件是对该 文件所在的目录有写权限，才能删除文件 x 代表可执行 execute 可被执行 rwx作用到目录 r 代表可读 可以读取 ls查看目录的内容 w 代表可写 对目录内进行创建+删除+重命名该目录 x 代表可执行 可以进入该目录 第4-6位确定所属组，（同用户组的）又有该文件的权限 --Group 同上 第7-9位确定其他用户拥有改文件的权限 --Other 同上 chmod 修改文件权限 chmod u=rwx,g=rx,o=rx hello.c++ chmod u-r,g+w,o+w hello.</description>
    </item>
    
    <item>
      <title>Linux其他指令</title>
      <link>https://qingbingwei.github.io/post/linux%E5%85%B6%E4%BB%96%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Sat, 24 Feb 2024 16:06:37 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E5%85%B6%E4%BB%96%E6%8C%87%E4%BB%A4/</guid>
      <description>Linux时间指令
date 显示当前时间 1. +%Y 显示当前年份 2. +%m 显示当前月份 3. +%d 显示当前是哪一天 4. +%H 显示当前时间小时部分 5. +%M 显示当前时间分钟部分 6. +%S 显示当前时间秒部分 7. &amp;quot;+%Y-%m-%d %H:%M:%S&amp;quot; 显示年月日时分秒 8. date -s 字符串时间 设置系统时间 例.date -s &amp;quot;2022-8-28 15:48:50&amp;quot; cal 日历指令 1.cal 显示本月日历 2.cal 2022 显示整年的日历 Linux搜索，查找指令
find 搜索原理是遍历(遍历)指定文件目录,找到匹配文件 -name 按照文件名称进行搜索 -user 按照指定用户所属文件搜索 -size 按照文件大小搜索 注:find /home/xq -name &#39;*.txt&#39; 查询所有txt文件 例.查找整个linux系统下，大于200M的文件 （+n大于,-n小于，n等于）单位还有K，M，G find / -size +200M 查询大于200M的文件 locate 快速搜索指定文件 它不是递归遍历，使用了locate数据库 注:由于locate指令基于数据库进行查询。 所以第一次查询运行前，必须使用updatedb指令创建locate数据库。 updatedb 一定要先执行这个指令 which 查看指令在哪个目录下 grep(一般配合管道符号 | 一起使用) 过滤查找 -n 显示行号 -i 忽略自动大小写 例.</description>
    </item>
    
    <item>
      <title>Linux基础操作</title>
      <link>https://qingbingwei.github.io/post/linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 21 Feb 2024 15:08:23 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>Linux的关机与重启
1.shutdown shutdown -h now 立即关机 shutdown -h 1 一分钟后关机 shutdown -r now 立即重启 2.halt 关机 3.sync 同步内存中的数据到硬盘 4.reboot 重启系统 注:
1.不管是重启系统还是关闭系统，首先要运行sync命令，把内存中的数据写入到磁盘中。 2.目前的shutdown、reboot、halt命令在关机前都进行了sync。 用户的登录和注销:
1.切换用户命令 su 用户名称 2.注销当前用户 exit 注:在切换用户的时候，如果从低级别的用户切换到高级别的用户，需要输入密码的(xq &amp;ndash;&amp;gt; root)。 如果从高级别的用户切换到低级别的用户(root &amp;ndash;&amp;gt; xq)，那么是不需要输入密码的。
Linux用户管理
注:创建用户权限只有管理员才有，我们一般在root用户下面创建用户
创建用户 useradd 用户名 创建用户，并且自定义用户目录名称 useradd -d 目录名称 用户名称 useradd -d /home/test king 设置用户密码 passwd 用户名 删除用户 userdel 用户名 (只是删除用户数据，对应目录不删除) 删除用户数据的同时也会删除用户目录 userdel -r 用户名 查询用户信息 id 用户名 获取当前用户名称 whoami 获取当前登录用户的详细信息 who am i Linux用户组管理</description>
    </item>
    
    <item>
      <title>Linux学习</title>
      <link>https://qingbingwei.github.io/post/linux%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Fri, 16 Feb 2024 11:30:51 +0800</pubDate>
      
      <guid>https://qingbingwei.github.io/post/linux%E5%AD%A6%E4%B9%A0/</guid>
      <description>在开始练习算法的同时，学习了解一下Linux操作系统。
Linux磁盘分区:(20G)
1./boot:引导分区，保存Linux启动需要用到的引导程序和文件 1G 2.swap:交换区，如果Linux内存不够用，swap分区会临时充当内存 2G 3./:根分区 17G Linux系统中三种网络连接方式
1.桥接模式:在虚拟机里面的网络地址必须和外部的网络地址保持在同一网段(IPv4为例，前三位相同)。 这样Linux操作系统才可以和外部的机器进行通信。但是如果用户数量太多容易造成IP冲突 2.NAT模式(网络地址转换):在NAT模式下，虚拟机里面的网络可以不再和主机里面的网络保持在同一网段。但是主机里面会存在虚拟网卡。 这个虚拟网卡的IP地址必须和Linux里面的IP地址在同一网段。 这样Linux就可以通过虚拟网卡和主机之间进行通信。 同时我们的Linux操作系统也可以和外部的网络进行通信 3.仅主机模式:Linux系统的地址必须和主机IP地址保持一致 虚拟机的克隆:
在选择克隆类型的时候，有两种
1.创建链接克隆。这种克隆的方式占用的磁盘空间较小，克隆时间更快。本质上还是使用原来的 linux操作系统，只是克隆了原linux操作系统的引用。 2.创建完整克隆。这种克隆的方式占用是磁盘空间较大，克隆时间比较慢，相当于把原来的linux 操作系统复制了一份。一般我们选择完整克隆。 虚拟机的快照:
VMware的菜单栏中有虚拟机快照这个选项，形象来说快照就相当于一个备份文件， 记录的是虚拟机运行到某一节点时的状态，在虚拟机的使用过程中如果发生了意外， 比如系统崩溃或系统异常，此时如果事先保存了快照，就可以选择恢复到快照， 即将虚拟机的磁盘文件系统和存储系统恢复到留下快照的那个节点，以恢复虚拟机的正常使用。 Linux目录结构:
linux文件系统采用的是层级式的树状目录结构，其中最上层的根目录是&amp;quot;/&amp;quot;，然后在此目录下面再创建其他的目录。 Linux目录结构详解:
/bin目录: 是Binary的缩写, 这个目录存放着最经常使用的命令。 比如我们常用的cd命令 cp命令都是存放在bin目录里面。 /sbin目录: s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。 /home目录: 存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。 /root目录: 该目录为系统管理员（root），也称作超级权限者的用户主目录。 如果我们使用root账户登录，默认所处的目录位置就是在/root下面。 /lib目录: 系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。 几乎所有的应用程序都需要用到这些共享库。 如果这个目录里面的文件被删除了，linux操作系统也就不能正常运行了。 /etc目录: 所有的系统管理所需要的配置文件和子目录。 linux系统本身所需要用到的配置文件也是存放在etc目录。 如果我们自己安装一些系统服务，比如mysql数据库服务，那么和数据库相关的配置文件(my.cnf)也是存放在/etc目录里面。 /boot目录: 存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。 如果这个目录里面的文件被删除了，linux操作系统也就不能正常运行了。 /dev目录: 类似于windows的设备管理器，把所有的硬件用文件的形式存储。 /proc目录: 这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统的信息。 这个目录我们不要动，否则可能造成系统的崩溃。 /tmp目录: 这个目录是用来存放一下临时文件的。 /sys目录: 这个目录存放了linux内核相关的文件信息。 这个目录我们不要动，否则可能造成系统的崩溃。 /media目录: linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。 比如我们插入的U盘 光驱都会被映射成对应的文件存放在media目录。 /mnt目录: 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里的内容了。 比如共享目录Linux-common。 /opt目录: 这是主机给安装软件所存放的目录 /usr/local目录: 简单的说就是应用程序安装之后，安装程序所存放的目录。 一般是通过编译源码方式安装的程序。(类似于Windows系统的program file) /var目录: 这个目录中存放着在不断变化，扩充着的东西，最常用的就是包括各种日志文件。 Linux远程登陆:</description>
    </item>
    
  </channel>
</rss>
